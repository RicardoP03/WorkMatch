
# You can use this file to easily send requests to your API.
# Prerequisite: humao.rest-client Vscode plugin (already present on codespace)
# High-level overview of REST API concepts used here: https://www.packtpub.com/en-us/learning/how-to-tutorials/what-are-rest-verbs-and-status-codes-tutorial?srsltid=AfmBOoppDqtkhRxj5BLZONRZFzRDmh6eP-xyTo6H4OuEHYuVbrg1d4Dm


# Requests for API endpoints of the sample project:

### Hello world endpoint: get response "Hello, Stranger!"
GET http://localhost:8080/hello-world

### Hello world with a request param passed.
# When sending the request it will ask you for the name
# hitting enter will avoid passing the param, and do the default behaviour above
# @prompt name The name to display in response
GET http://localhost:8080/hello-world
    ?name={{name}}

### Save a greeting to database
@postGreetingId = 1001
@postGreetingContent = Hello!
POST http://localhost:8080/greetings
Content-Type: application/json

{
    "id": "{{postGreetingId}}",
    "content": "{{postGreetingContent}}"
}

### Get all greetings
GET http://localhost:8080/greetings

### Get info for greeting with given content
# @prompt content Greeting content to look for, defaults to "Overview"
GET http://localhost:8080/info
    ?title={{content}}

### Update an existing greeting
@putGreetingId = 1001
@putGreetingContent = Hello again!
PUT http://localhost:8080/greetings/{{putGreetingId}}
Content-Type: application/json

{
    "content": "{{putGreetingContent}}"
}

### Delete greeting
@deleteGreetingId = 1001
DELETE http://localhost:8080/greetings/{{deleteGreetingId}}



### Get all users
GET http://localhost:8080/users

### Get user by ID
@userId = 67d7139fd390b106badfd9e3
GET http://localhost:8080/users/{{userId}}

### Create a new user
POST http://localhost:8080/users
Content-Type: application/json

{
    "name": "John Doe",
    "role": "employer",
    "password": "securepass"
}

### Update an existing user
@updateUserId = 67d7139fd390b106badfd9e3
PUT http://localhost:8080/users/{{updateUserId}}
Content-Type: application/json

{
    "id": "67d7139fd390b106badfd9e3",
    "name": "John Updated",
    "role": "employer",
    "password": "newpassword"
}

### Delete a user
@deleteUserId = 67d71070fc00c903eca33a75
DELETE http://localhost:8080/users/{{deleteUserId}}

### Login user
POST http://localhost:8080/login
Content-Type: application/json

{
  "name": "John Updated",
  "password": "newpassword"
}

### Logout user
POST http://localhost:8080/logout

### Get logged-in user
GET http://localhost:8080/loggedUser



@userId1 = ""
@userId2 = ""
### Create an message
POST http://localhost:8080/message
Content-Type: application/json

{
    "content": "Hello, how are you?",
    "senderId": {{userId1}},
    "receiverId": {{userId2}},
}

@messageId = "";
### delete an message
DELETE http://localhost:8080/message/{{messageId}}


###get messages between users
GET http://localhost:8080/between/{{userId1}}/{{userId2}}


@searchedString = "";
###get messages between users that contain an substrig
GET http://localhost:8080/between/{{userId1}}/{{userId2}}/{{searchedString}}

@appId = "";
@jobId = "";
@seekerId = "";

###get an application by its id
GET http://localhost:8080/application/{{appId}}


### Get the list of applications of an job seeker
GET http://localhost:8080/applicationsBySeekerId/{{seekerId}}

### Get the list of applications to an job
GET http://localhost:8080/applicationsByJobId/{{jobId}}

### Create an application
POST http://localhost:8080/application
Content-Type: application/json

{
    "jobId": {{jobId}},
    "seekerId: {{seekerId}}
}

### delete an application
DELETE http://localhost:8080/application/{{appId}}

