pipeline {
    agent any
    tools {
        jdk 'jdk21'
    }

    environment {
        DOCKER_PASSWORD = credentials("docker_password")
        GITHUB_TOKEN = credentials("github_token")
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean build'
            }
        }

        stage('Tag image') {
            steps {
                script {
                    sh 'git fetch --tags'

                    def latestTag = sh(script: 'git tag | sort --version-sort | tail -1', returnStdout: true).trim()
                    
                    def MAJOR_VERSION = sh(script: "echo ${latestTag} | cut -d . -f 1", returnStdout: true).trim()
                    def MINOR_VERSION = sh(script: "echo ${latestTag} | cut -d . -f 2", returnStdout: true).trim()
                    def PATCH_VERSION = sh(script: "echo ${latestTag} | cut -d . -f 3", returnStdout: true).trim()

                    env.IMAGE_TAG = sh(script: """echo ${MAJOR_VERSION}.$(( ${MINOR_VERSION} + 1 )).${PATCH_VERSION}""", returnStdout: true).trim()
                }


                sh "docker build -t ricardo03/hello-img:${env.IMAGE_TAG} ."

                sh "git tag ${env.IMAGE_TAG}"
                sh "git push https://${GITHUB_TOKEN}@github.com/${DOCKER_PASSWORD_USR}/service.git ${env.IMAGE_TAG}"
            }
        }

        stage('Run Application') {
            steps {
                sh "IMAGE_TAG=${env.IMAGE_TAG} docker compose up -d hello mongo"
            }
        }
    }
}
